232. 用栈实现队列
请你仅使用两个栈实现先入先出队列。队列应当支持一般队列的支持的所有操作（push、pop、peek、empty）：

实现 MyQueue 类：

void push(int x) 将元素 x 推到队列的末尾
int pop() 从队列的开头移除并返回元素
int peek() 返回队列开头的元素
boolean empty() 如果队列为空，返回 true ；否则，返回 false

class MyQueue {
    private Deque<Integer> s1;// 准备出的
    private Deque<Integer> s2;// 优先放的

    /** Initialize your data structure here. */
    public MyQueue() {
        s1 = new LinkedList<>();
        s2 = new LinkedList<>();
    }
    
    /** Push element x to the back of queue. */
    public void push(int x) {
        s2.push(x);
    }
    
    /** Removes the element from in front of queue and returns that element. */
    public int pop() {
        if (s1.isEmpty()) {
            while (!s2.isEmpty()) {
                Integer e = s2.pop();
                s1.push(e);
            }
        }
        return s1.pop();
    }
    
    /** Get the front element. */
    public int peek() {
        if (s1.isEmpty()) {
            while (!s2.isEmpty()) {
                Integer e = s2.pop();
                s1.push(e);
            }
        }
        return s1.peek();
    }
    
    /** Returns whether the queue is empty. */
    public boolean empty() {
        return s1.isEmpty() && s2.isEmpty();
    }
}