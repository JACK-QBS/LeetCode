//动态规划求解：
class Solution {
    public int maxValue(int[][] grid) {
        int m = grid.length;//行数
        int n = grid[0].length;//列数
        //求出第一行的每个节点的最大价值
        for (int i = 1; i < n; i++) {
            grid[0][i] += grid[0][i - 1];
        }
        //求出第一列的每个节点的最大价值
        for (int j = 1; j < m; j++) {
            grid[j][0] += grid[j - 1][0];
        }
        //其他节点：
        for (int i = 1; i < m; i++) {
            for (int j = 1; j < n; j++) {
                grid[i][j] += Math.max(grid[i - 1][j],grid[i][j - 1]);
            }
        }
        return grid[m - 1][n - 1];
    }
}