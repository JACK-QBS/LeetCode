/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
import java.util.*;
class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
        Queue<TreeNode> queue = new LinkedList<>();//存储遍历到每一层的所有结点
        List<List<Integer>> res = new ArrayList<>();//最后的返回集合
        if (root != null) {
            queue.add(root);
        } 
        while (!queue.isEmpty()) {
            List<Integer> tmp = new ArrayList<>();//存储每一层结点的值
            for (int i = queue.size(); i > 0; i--) {
                TreeNode node = queue.remove();//取出队列中的结点
                tmp.add(node.val);
                if (node.left != null) queue.add(node.left);
                if (node.right != null) queue.add(node.right);
            }
           res.add(tmp); 
        }
        return res;
    }
}