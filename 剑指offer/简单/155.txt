
155. 最小栈

设计一个支持 push ，pop ，top 操作，并能在常数时间内检索到最小元素的栈。

push(x) —— 将元素 x 推入栈中。
pop() —— 删除栈顶的元素。
top() —— 获取栈顶元素。
getMin() —— 检索栈中的最小元素。



import java.util.*;

class MinStack {
    // 普通栈
    private Deque<Integer> s1;
    // 小数栈
    private Deque<Integer> s2;
    /** initialize your data structure here. */
    public MinStack() {
        s1 = new LinkedList<>();
        s2 = new LinkedList<>();
    }   
    public void push(int x) {
        // 把x压入普通栈s1
        s1.push(x);
        // 判断小数栈s2是否为空
        if (s2.isEmpty()) {
            // 把x也压入S2中
            s2.push(x);
        } else {
            // 拿出s2的栈顶元素
            int t = s2.peek();
            // 比较数字x和t谁小，谁小把谁压入s2中
            if (x < t) {
                s2.push(x);
            } else {
                s2.push(t);
            }
        }
    }  
    public void pop() {
        s1.pop();
        s2.pop();
        
    public int top() {
        return s1.peek();
    }
    public int getMin() {
        return s2.peek();
    }
}