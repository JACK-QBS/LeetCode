/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public boolean leafSimilar(TreeNode root1, TreeNode root2) {
        //树1的叶子节点序列
        List<Integer> arr1 = new ArrayList<>();
        if (root1 != null) {
            dfs(root1,arr1);
        }
        //树2的叶子节点序列
        List<Integer> arr2 = new ArrayList<>();
        if (root2 != null) {
            dfs(root2,arr2);
        }
        return arr1.equals(arr2);
    }
    //先序遍历整颗树：
    public void dfs(TreeNode node,List<Integer> arr) {
        if (node.left == null && node.right == null) {
            arr.add(node.val);
        } else {
            if (node.left != null) {
                dfs(node.left,arr);
            }
            if (node.right != null) {
                dfs(node.right,arr);
            }
        }
    }
}